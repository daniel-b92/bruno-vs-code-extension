{
    "name": "bru-as-code",
    "displayName": "bru-as-code",
    "description": "Enables working with Bruno files in a manner like working with code",
    "version": "0.17.0",
    "publisher": "daniel-b92",
    "private": true,
    "license": "MIT",
    "repository": "https://github.com/daniel-b92/bruno-vs-code-extension",
    "bugs": {
        "url": "https://github.com/daniel-b92/bruno-vs-code-extension/issues"
    },
    "engines": {
        "vscode": "^1.100.0"
    },
    "extensionDependencies": [
        "vscode.typescript-language-features"
    ],
    "categories": [
        "Testing",
        "Snippets",
        "Programming Languages",
        "Linters"
    ],
    "icon": "./icon.png",
    "activationEvents": [
        "workspaceContains:**/*.bru"
    ],
    "main": "./dist/extension",
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "webpack --mode development",
        "compileWithLocalTsPlugin": "cd src/tsPlugin && tsc --project tsconfig.json && mkdir -p ../../node_modules/typescript-for-bruno && cp ./out/index.js ../../node_modules/typescript-for-bruno && cd ../.. && webpack --mode development",
        "lint": "eslint",
        "watch": "webpack --mode development --watch",
        "package": "webpack --mode production --devtool hidden-source-map"
    },
    "devDependencies": {
        "@eslint/js": "^9.13.0",
        "@stylistic/eslint-plugin": "^2.13.0",
        "@types/chai": "^5.2.2",
        "@types/mocha": "^10.0.10",
        "@types/node": "^20.17.24",
        "@types/vscode": "^1.100.0",
        "eslint": "^9.22.0",
        "ts-loader": "^9.5.2",
        "webpack": "^5.98.0",
        "webpack-cli": "^6.0.1"
    },
    "dependencies": {
        "@zentryc5t/ts-plugin-for-bruno": "^2.0.0",
        "glob": "^11.0.3",
        "prettier": "^3.6.2",
        "process": "^0.11.10",
        "tree-kill": "^1.2.2",
        "typescript": "^5.9.2"
    },
    "contributes": {
        "configuration": {
            "title": "bru-as-code",
            "properties": {
                "bru-as-code.testRunEnvironment": {
                    "type": "string",
                    "description": "The name of the environment to use for running Bruno tests with."
                },
                "bru-as-code.htmlReportPath": {
                    "type": "string",
                    "default": "results.html",
                    "description": "The path for saving HTML test reports. Can either be defined as an absolute path or relative to the collection root directory."
                },
                "bru-as-code.alwaysShowHtmlReport": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Whether to always show the HTML test report after running tests. If set to *false*, the HTML report will only be shown for failed runs."
                },
                "bru-as-code.allowInstallationOfBrunoCliViaNpx": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Allow the Bruno CLI npm package to be installed temporarily via npx, if it's not already installed globally. See [npm docs](https://docs.npmjs.com/cli/v11/commands/npx) for further infos on npx."
                },
                "bru-as-code.suggestCreatingTsConfigsForCollections": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Show a dialog suggesting to create tsconfig files for collections (if not already existing) after every extension start."
                }
            }
        },
        "typescriptServerPlugins": [
            {
                "enableForWorkspaceTypeScriptVersions": true,
                "name": "@zentryc5t/ts-plugin-for-bruno",
                "languages": [
                    "bru",
                    "js"
                ]
            }
        ],
        "snippets": [
            {
                "language": "bru",
                "path": "./src/languageFeatures/bruno_snippets.json"
            }
        ],
        "languages": [
            {
                "id": "bru",
                "extensions": [
                    ".bru"
                ],
                "aliases": [
                    "bru",
                    "bru"
                ],
                "configuration": "./src/languageFeatures/language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "bru",
                "scopeName": "source.bru",
                "path": "./syntaxes/bru.tmLanguage.json"
            }
        ],
        "commands": [
            {
                "command": "brunoCollectionsView.refresh",
                "title": "Refresh collection explorer",
                "category": "Bru-as-Code",
                "icon": "$(extensions-refresh)"
            },
            {
                "command": "brunoCollectionsView.deleteItem",
                "title": "Delete",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.duplicateFile",
                "title": "Duplicate",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.duplicateFolder",
                "title": "Duplicate",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.renameItem",
                "title": "Rename",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.createRequestFile",
                "title": "Create request file",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.createEmptyFile",
                "title": "Create empty file",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.createFolder",
                "title": "Create folder",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.startTestRun",
                "title": "Start test run",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            },
            {
                "command": "brunoCollectionsView.openInNewTabgroup",
                "title": "Open to the side",
                "category": "Bru-as-Code",
                "enablement": "view == brunoCollectionsView"
            }
        ],
        "views": {
            "explorer": [
                {
                    "id": "brunoCollectionsView",
                    "name": "Bruno Collections",
                    "icon": ""
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "brunoCollectionsView.refresh",
                    "when": "view == brunoCollectionsView",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "brunoCollectionsView.startTestRun",
                    "when": "view == brunoCollectionsView",
                    "group": "navigation@1"
                },
                {
                    "command": "brunoCollectionsView.openInNewTabgroup",
                    "when": "view == brunoCollectionsView && !treeElementCanExpand && !treeElementCanCollapse",
                    "group": "navigation@5"
                },
                {
                    "command": "brunoCollectionsView.createRequestFile",
                    "when": "view == brunoCollectionsView && (treeElementCanExpand || treeElementCanCollapse)",
                    "group": "navigation@10"
                },
                {
                    "command": "brunoCollectionsView.createEmptyFile",
                    "when": "view == brunoCollectionsView && (treeElementCanExpand || treeElementCanCollapse)",
                    "group": "navigation@12"
                },
                {
                    "command": "brunoCollectionsView.createFolder",
                    "when": "view == brunoCollectionsView && (treeElementCanExpand || treeElementCanCollapse)",
                    "group": "navigation@15"
                },
                {
                    "command": "brunoCollectionsView.renameItem",
                    "when": "view == brunoCollectionsView",
                    "group": "navigation@20"
                },
                {
                    "command": "brunoCollectionsView.duplicateFile",
                    "when": "view == brunoCollectionsView && !treeElementCanExpand && !treeElementCanCollapse",
                    "group": "navigation@21"
                },
                {
                    "command": "brunoCollectionsView.duplicateFolder",
                    "when": "view == brunoCollectionsView && (treeElementCanExpand || treeElementCanCollapse)",
                    "group": "navigation@22"
                },
                {
                    "command": "brunoCollectionsView.deleteItem",
                    "when": "view == brunoCollectionsView",
                    "group": "navigation@30"
                }
            ]
        }
    }
}
